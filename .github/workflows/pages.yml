name: Docs → GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build site (MkDocs)
        run: poetry run mkdocs build --strict

      - name: Move default build to /en/ and create redirect
        run: |
          # Move built English docs (from root) to /en/
          mkdir -p site/en
          # Move all root files/dirs except de/ and assets/ to /en/
          for item in site/*; do
            base=$(basename "$item")
            if [ "$base" != "de" ] && [ "$base" != "assets" ] && [ "$base" != "en" ]; then
              mv "$item" site/en/
            fi
          done

          # Create root redirect to /en/
          cat > site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting to Aqtra Docs</title>
            <meta http-equiv="refresh" content="0; URL=/en/">
            <link rel="canonical" href="https://docs.aqtra.io/en/">
            <script>window.location.replace("/en/" + window.location.hash);</script>
          </head>
          <body>
            <p>Redirecting to <a href="/en/">Aqtra Documentation</a>...</p>
          </body>
          </html>
          EOF

      - name: Mirror assets into language folders (safety net)
        run: |
          set -e
          for L in en de; do
            mkdir -p "site/$L/assets"
            rsync -a --delete "site/assets/" "site/$L/assets/"
          done
          echo "✅ Assets mirrored to /en/assets and /de/assets"

      - name: Add CNAME and .nojekyll
        run: |
          echo "docs.aqtra.io" > site/CNAME
          touch site/.nojekyll

      - name: Verify build output
        run: |
          set -e
          echo "Checking critical files:"
          test -f site/en/index.html && echo "✅ EN index.html"
          test -f site/de/index.html && echo "✅ DE index.html"
          test -f site/index.html && echo "✅ Root index.html (redirect)"
          test -f site/CNAME && echo "✅ CNAME"
          test -f site/.nojekyll && echo "✅ .nojekyll"

          echo ""
          echo "Material theme assets (root /assets):"
          ls -1 site/assets/stylesheets/ | grep -E '^main\..*\.min\.css$' && echo "✅ Material main CSS"
          ls -1 site/assets/stylesheets/ | grep -E '^palette\..*\.min\.css$' && echo "✅ Material palette CSS"
          ls -1 site/assets/javascripts/ | grep -E '^bundle\..*\.min\.js$' && echo "✅ Material bundle JS"

          echo ""
          echo "Custom assets (root /assets):"
          test -f site/assets/css/extra.css && echo "✅ Custom extra.css"
          test -f site/assets/css/back-to-top.css && echo "✅ Back-to-top CSS"
          test -f site/assets/js/nav-anchor.js && echo "✅ Nav anchor JS"
          test -f site/assets/js/back-to-top.js && echo "✅ Back-to-top JS"

          echo ""
          echo "Mirrored assets in /en/assets (safety net):"
          MAIN_CSS=$(ls site/assets/stylesheets/ | grep -E '^main\..*\.min\.css$' | head -n1)
          BUNDLE_JS=$(ls site/assets/javascripts/ | grep -E '^bundle\..*\.min\.js$' | head -n1)
          test -f "site/en/assets/stylesheets/$MAIN_CSS" && echo "✅ EN has Material main CSS"
          test -f "site/en/assets/javascripts/$BUNDLE_JS" && echo "✅ EN has Material bundle JS"

          echo ""
          echo "Branding:"
          test -f site/assets/favicon.ico && echo "✅ Favicon"
          test -f site/assets/images/logo-light.svg && echo "✅ Logo"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
