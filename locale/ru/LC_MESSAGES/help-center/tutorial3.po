# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Scalaxi
# This file is distributed under the same license as the Scalaxi platform
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scalaxi platform \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-01 13:53+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ru\n"
"Language-Team: ru <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../src/help-center/tutorial3.md:2
msgid "Tutorial №3"
msgstr ""

#: ../../src/help-center/tutorial3.md:3
msgid "Используем Python"
msgstr ""

#: ../../src/help-center/tutorial3.md:5
msgid "Введение"
msgstr ""

#: ../../src/help-center/tutorial3.md:7
msgid ""
"Платформа Scalaxi предоставляет возможность использовать Python для "
"различных целей в качестве удобного широко известного языка "
"сценариев/программирования."
msgstr ""

#: ../../src/help-center/tutorial3.md:9
msgid ""
"Сценарии Python, поддерживаемые платформой Scalaxi, должны использовать "
"Python версии 3.0, как описано здесь: https://docs.python.org/3/. Полное "
"руководство разработчика можно найти в Руководстве разработчика Python."
msgstr ""

#: ../../src/help-center/tutorial3.md:11
msgid ""
"Версия Python, которую использует Scalaxi Platform, называется Iron "
"Python, которая предоставляет интерфейс для кода C#. Он предоставляет две"
" важные библиотеки, которые необходимо импортировать в начале скрипта — "
"clr и system. Эти библиотеки предоставляют доступ к сущностям платформы "
"Scalaxi, которые можно запрашивать и контролировать из скрипта. <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:14
msgid "Способы использования скриптов Python на платформе Scalaxi"
msgstr ""

#: ../../src/help-center/tutorial3.md:16
msgid "Существует несколько способов использования Python на платформе Scalaxi:"
msgstr ""

#: ../../src/help-center/tutorial3.md:18
msgid ""
"Как часть [Component Script](https://www.notion.so/Component-Script-"
"d6b858377bd547cea2ec45384d7ef0e4?pvs=21)  который существует для каждого "
"[Component](https://www.notion.so/Components-"
"e3c966bb63944fcfb49ce3cb5fe532ae?pvs=21). Он позволяет контролировать "
"формы приложений, разработанные и выполняемые с помощью платформы "
"Scalaxi, а также предоставлять настраиваемые индексы, которые можно "
"запускать в качестве реакции на какое-либо событие, например нажатие "
"кнопки клиентом. Существует 3 основных способа использования кода Python "
"в Component Script"
msgstr ""

#: ../../src/help-center/tutorial3.md:19
msgid ""
"Основная часть [Component Script](https://www.notion.so/Component-Script-"
"d6b858377bd547cea2ec45384d7ef0e4?pvs=21), которая выполняется каждый раз "
"при отображении формы компонента"
msgstr ""

#: ../../src/help-center/tutorial3.md:20
msgid ""
"Вызов функции внутри [Component Script](https://www.notion.so/Component-"
"Script-d6b858377bd547cea2ec45384d7ef0e4?pvs=21), например, при нажатии "
"кнопки"
msgstr ""

#: ../../src/help-center/tutorial3.md:21
msgid ""
"Для этого вам нужно определить функцию внутри [Component "
"Script](https://www.notion.so/Component-Script-"
"d6b858377bd547cea2ec45384d7ef0e4?pvs=21), а затем перейти к элементу "
"управления пользовательского интерфейса, такому как Button, перейти в "
"раздел «Actions» и установить для параметра «Command Type» значение "
"«Execute Script». Затем вам нужно ввести имя и параметры вызова (если "
"есть) вашего скрипта в предоставленные поля"
msgstr ""

#: ../../src/help-center/tutorial3.md:22
msgid ""
"Использование функции внутри [Component Script](https://www.notion.so"
"/Component-Script-d6b858377bd547cea2ec45384d7ef0e4?pvs=21) для событий "
"изменения значения"
msgstr ""

#: ../../src/help-center/tutorial3.md:23
msgid ""
"Для этого вам нужно определить функцию внутри скрипта компонента, а затем"
" перейти к элементу управления пользовательского интерфейса, такому как "
"текстовое поле и т. д., затем перейти в раздел «Events» и ввести имя "
"вашего скрипта в поле «On value change»."
msgstr ""

#: ../../src/help-center/tutorial3.md:24
msgid ""
"Обратите внимание, что эта функция будет вызываться только в том случае, "
"если данные поля изменились, и фокус элемента управления "
"пользовательского интерфейса в форме уйдет от этого элемента управления "
"пользовательского интерфейса."
msgstr ""

#: ../../src/help-center/tutorial3.md:25
msgid ""
"Подписавшись на изменения данных с помощью метода "
"context.DataModel.Model.Subscribe()"
msgstr ""

#: ../../src/help-center/tutorial3.md:26
msgid ""
"Самый простой способ сделать это — определить функцию перехвата всех "
"изменений (например, def check_all_changes()) в вашем компонентном "
"скрипте, а затем подписаться на нее."
msgstr ""

#: ../../src/help-center/tutorial3.md:27
msgid ""
"Ваша функция будет вызываться каждый раз, когда происходит изменение "
"текущих данных элемента управления пользовательского интерфейса, в тот "
"момент, когда этот элемент управления пользовательского интерфейса теряет"
" фокус (например, пользователь переключается на другой элемент управления"
" пользовательского интерфейса или другое приложение)."
msgstr ""

#: ../../src/help-center/tutorial3.md:28
msgid ""
"В рамках действия [DataFlow](https://www.notion.so/Dataflow-"
"c5972aaaecf8482c83be611ea533b467?pvs=21) выполните скрипт для определения"
" логики принятия решений и преобразования данных и установки внутренних "
"переменных, которые будут использоваться как часть сценариев "
"[DataFlow](https://www.notion.so/Dataflow-"
"c5972aaaecf8482c83be611ea533b467?pvs=21). Вы можете увидеть примеры "
"использования скрипта Python для DataFlow в нашем [Уроке "
"№2](https://www.notion.so/2-94b8e938e3f44c6c87938a1150af6cf8?pvs=21). "
"<br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:31
msgid "Использование Python для доступа к компонентам платформы Scalaxi"
msgstr ""

#: ../../src/help-center/tutorial3.md:33
msgid ""
"Чтобы получить доступ к компонентам платформы Scalaxi, сначала необходимо"
" импортировать clr библиотеки IronPython, как показано ниже *курсивом*."
msgstr ""

#: ../../src/help-center/tutorial3.md:35
msgid ""
"``#Add IronPython library that imports system CRL (.NET) names into "
"Python`` ``import clr``"
msgstr ""

#: ../../src/help-center/tutorial3.md:38
msgid ""
"После импорта к нескольким объектам можно получить доступ изнутри скрипта"
" Python через системную переменную «context». <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:41
msgid "Использование context.Model & context.DataModel"
msgstr ""

#: ../../src/help-center/tutorial3.md:43
msgid ""
"context.Model & context.DataModel обеспечивают доступ к различным полям "
"данных "
"[модели](https://www.notion.so/7844bd8d24c44bfab785cb3a068b2d92?pvs=21) "
"Scalaxi Platform."
msgstr ""

#: ../../src/help-center/tutorial3.md:45
msgid ""
"Для context.Model поля данных включают как поля компонента по умолчанию, "
"предоставляемые платформой Scalaxi, так и настраиваемые поля, добавленные"
" разработчиком компонента."
msgstr ""

#: ../../src/help-center/tutorial3.md:47
msgid ""
"Для context.DataModel доступны только настраиваемые поля, добавленные "
"разработчиками компонентов."
msgstr ""

#: ../../src/help-center/tutorial3.md:49
msgid ""
"Рекомендуется, чтобы context.DataModel использовался для доступа ко всем "
"настраиваемым полям, а context.Model использовался только для доступа к "
"внутренним полям компонента по умолчанию."
msgstr ""

#: ../../src/help-center/tutorial3.md:51
msgid ""
"Если мы напишем скрипт компонента, обращающийся к этой модели, следующие "
"переменные системной модели будут доступны в нашем скрипте через "
"context.Model:"
msgstr ""

#: ../../src/help-center/tutorial3.md:53
msgid ""
"Id - внутренний идентификатор, автоматически сгенерированный платформой "
"Scalaxi для каждого компонента. Если Id == 0, это означает, что данные "
"компонента еще не были сохранены, это означает, что мы находимся в режиме"
" ввода данных для этого конкретного экземпляра данных компонента, "
"например, добавляем новый счет в наш [Tutorial №1](#tutorial1)"
msgstr ""

#: ../../src/help-center/tutorial3.md:54
msgid ""
"createDate - внутренне установленная дата, когда экземпляр данных этого "
"компонента был впервые создан"
msgstr ""

#: ../../src/help-center/tutorial3.md:55
msgid ""
"name (String) - системное user-friendly имя которое по умолчанию будет "
"браться для показа ссылок через поля типа Catalog"
msgstr ""

#: ../../src/help-center/tutorial3.md:56
msgid ""
"updateDate - внутренне установленная дата последнего обновления "
"экземпляра данных этого компонента."
msgstr ""

#: ../../src/help-center/tutorial3.md:57
msgid ""
"CreatorSubject - данные, которые показывают, какой пользователь добавил "
"экземпляр данных этого конкретного компонента. — changeAuthor — данные, "
"которые показывают, какой пользователь последний раз обновлял данный "
"конкретный компонент"
msgstr ""

#: ../../src/help-center/tutorial3.md:60
msgid ""
"Кроме того, следующие специфичные для компонента атрибуты будут доступны "
"для компонента нашего руководства №1 через context.DataModel "
"(рекомендуется) или context.Model:"
msgstr ""

#: ../../src/help-center/tutorial3.md:62
msgid "InvoiceName - уникальное имя для нашего нового счета"
msgstr ""

#: ../../src/help-center/tutorial3.md:63
msgid "InvoiceState - текущий статус нашего нового инвойса"
msgstr ""

#: ../../src/help-center/tutorial3.md:64
msgid "InvoiceNumber - уникальный идентификатор номера для нашего счета"
msgstr ""

#: ../../src/help-center/tutorial3.md:65
msgid "InvoiceDueDate - срок оплаты нашего счета"
msgstr ""

#: ../../src/help-center/tutorial3.md:66
msgid "InvoiceTotalValue - общая стоимость нашего счета"
msgstr ""

#: ../../src/help-center/tutorial3.md:68
msgid ""
"Давайте теперь напишем пример сценария, который предварительно заполнит "
"некоторые поля для нового счета."
msgstr ""

#: ../../src/help-center/tutorial3.md:92
msgid ""
"Теперь, если мы откроем приложение Tutorial #1 и нажмем кнопку "
"«Добавить», чтобы добавить новый счет, экран будет выглядеть следующим "
"образом: <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:95
msgid "![Tutorial 3.1](tut3.1.png)"
msgstr ""

#: ../../src/help-center/tutorial3.md:95
msgid "Tutorial 3.1"
msgstr ""

#: ../../src/help-center/tutorial3.md:99
msgid "Использование context.Properties"
msgstr ""

#: ../../src/help-center/tutorial3.md:101
msgid ""
"The way to access a UI control is to use context.Properties the following"
" way:"
msgstr ""

#: ../../src/help-center/tutorial3.md:103
msgid ""
"context.Properties позволяет получить доступ ко всем элементам компонента"
" и использовать, например, функции элементов управления формы "
"пользовательского интерфейса для управления конкретным элементом "
"управления пользовательского интерфейса."
msgstr ""

#: ../../src/help-center/tutorial3.md:105
msgid ""
"Чтобы получить доступ к элементу управления пользовательского интерфейса,"
" используйте context.Properties следующим образом:"
msgstr ""

#: ../../src/help-center/tutorial3.md:107
msgid ""
"``context.Properties.<Internal_UI_Control_Name>.<UIControlProperty> = "
"<Value>``"
msgstr ""

#: ../../src/help-center/tutorial3.md:109
msgid ""
"Здесь <Internal_UI_Control_Name> следует заменить именем вашего элемента "
"управления пользовательского интерфейса, который вы настроили во время "
"проектирования. Например, в случае учебника № 1 мы установили внутреннее "
"имя для элемента управления InvoiceState UI, как показано ниже: <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:112
msgid "![Tutorial 3.2](tut3.2.png)"
msgstr ""

#: ../../src/help-center/tutorial3.md:112
msgid "Tutorial 3.2"
msgstr ""

#: ../../src/help-center/tutorial3.md:116
msgid ""
"Теперь мы можем использовать это внутреннее имя, чтобы установить "
"следующую логику:"
msgstr ""

#: ../../src/help-center/tutorial3.md:118
msgid "При создании нового счета статус устанавливается на «На рассмотрении»."
msgstr ""

#: ../../src/help-center/tutorial3.md:119
msgid ""
"Изменение поля статуса запрещено, то есть это поле должно быть отключено,"
" но видно"
msgstr ""

#: ../../src/help-center/tutorial3.md:121
msgid ""
"Способ сделать это — использовать свойство Disable нашего элемента "
"управления пользовательского интерфейса, чтобы установить его в True. Это"
" приведет к тому, что поле появится, но не может быть изменено "
"пользователем, который создает новый счет. Это делается путем добавления "
"строки кода, как показано ниже:"
msgstr ""

#: ../../src/help-center/tutorial3.md:123
msgid "``context.Properties.UI_InvoiceStatus.Disabled = True``"
msgstr ""

#: ../../src/help-center/tutorial3.md:125
msgid ""
"Добавление этого в скрипт нашего компонента приведет к следующим "
"изменениям в нашей новой форме добавления счета. <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:128
msgid "![Tutorial 3.3](tut3.3.png)"
msgstr ""

#: ../../src/help-center/tutorial3.md:128
msgid "Tutorial 3.3"
msgstr ""

#: ../../src/help-center/tutorial3.md:132
msgid "Как видите, поле «Статус счета» теперь отключено."
msgstr ""

#: ../../src/help-center/tutorial3.md:134
msgid ""
"Другим часто используемым полем context.Properties для управления "
"элементами управления пользовательского интерфейса является Visible. Если"
" установлено значение False, этот конкретный элемент управления "
"пользовательского интерфейса не будет отображаться в форме. Затем его "
"можно снова включить, установив для него значение True. Это можно сделать"
" для любого элемента управления пользовательского интерфейса, включая "
"панели, содержащие несколько различных элементов управления "
"пользовательского интерфейса."
msgstr ""

#: ../../src/help-center/tutorial3.md:136
msgid ""
"Пример того, как его можно использовать в контексте нашего [Tutorial № "
"1](#tutorial1) для первоначального скрытия поля «Статус счета», показан "
"ниже."
msgstr ""

#: ../../src/help-center/tutorial3.md:146
msgid ""
"Также есть поле Hidden которое прячет/показывает элементы интерфейса "
"пользователя, аналогично полю Visible."
msgstr ""

#: ../../src/help-center/tutorial3.md:148
msgid ""
"Другое часто используемое поле context.Properties является обязательным. "
"Если установлено значение true, конкретный элемент управления "
"пользовательского интерфейса станет обязательным (не может быть пустым), "
"а если установлено значение false, он станет необязательным. Обратите "
"внимание, что при этом изменяется только состояние элемента управления "
"пользовательского интерфейса для настраиваемого свойства в текущем "
"экземпляре формы, а не самого настраиваемого свойства, шаблона формы или "
"элементов управления пользовательского интерфейса для этого "
"настраиваемого свойства в других формах."
msgstr ""

#: ../../src/help-center/tutorial3.md:150
msgid ""
"Дополнительные примеры использования context.Properties для управления "
"элементами пользовательского интерфейса можно найти в [Tutorial "
"№2](#tutorial2). <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:153
msgid "Использование context.Form"
msgstr ""

#: ../../src/help-center/tutorial3.md:155
msgid ""
"context.Form можно использовать для доступа к данным формы (например, для"
" целей проверки во время обработки формы, до того, как данные формы будут"
" сохранены во внутреннем хранилище) или для управления визуальным "
"представлением формы, например, путем настройки сообщения об ошибке."
msgstr ""

#: ../../src/help-center/tutorial3.md:157
msgid ""
"Для этого следует использовать context.Form.Get(<CustomFieldName>) для "
"получения объекта, представляющего конкретное поле. Затем с этим объектом"
" можно использовать следующие функции."
msgstr ""

#: ../../src/help-center/tutorial3.md:159
msgid ""
"context.Form.Get(<CustomFieldName>).SetValue(<Value>) — устанавливает "
"значение для определенного элемента управления пользовательского "
"интерфейса в текущей форме. — "
"context.Form.Get(<CustomFieldName>).AddError(<StringValue>) — "
"устанавливает сообщение об ошибке, отображаемое под определенным "
"элементом управления пользовательского интерфейса в текущей форме. — "
"context.Form.Get(<CustomFieldName>).ClearError() — очищает сообщение об "
"ошибке, показанное под конкретным элементом управления пользовательского "
"интерфейса в текущей форме."
msgstr ""

#: ../../src/help-center/tutorial3.md:163
msgid ""
"Следующее расширение скрипта показывает, как проверить ситуацию, в "
"которой пользователь не изменил имя счета-фактуры по умолчанию, которое "
"мы установили выше в примерах для [Tutorial № 1](#tutorial1)."
msgstr ""

#: ../../src/help-center/tutorial3.md:176
msgid "![Tutorial 3.4](tut3.4.png)"
msgstr ""

#: ../../src/help-center/tutorial3.md:176
msgid "Tutorial 3.4"
msgstr ""

#: ../../src/help-center/tutorial3.md:180
msgid "Использование context.Commands"
msgstr ""

#: ../../src/help-center/tutorial3.md:182
msgid ""
"context.Commands можно использовать для управления пользовательским "
"интерфейсом исполняемого в данный момент компонента, изменения "
"содержимого текущей формы, открытия разных страниц, открытия новых "
"компонентов, возврата на предыдущую страницу или даже запуска новых "
"Workflows, Dataflows или Scripts."
msgstr ""

#: ../../src/help-center/tutorial3.md:184
msgid ""
"Эти команды обычно используются внутри сценариев, вызываемых действием "
"ExecuteScript с помощью кнопок, и в подобных случаях. Например, в нашем "
"[Tutorial № 1](#tutorial1) кнопка Back to All Invoices может использовать"
" следующий скрипт для Вернуться на предыдущую страницу:"
msgstr ""

#: ../../src/help-center/tutorial3.md:192
msgid ""
"Этот скрипт должен быть частью скрипта компонента и быть настроенным для "
"кнопки Back to All Invoices, в разделе Actions -> Command Type: Execute "
"Script -> Method Name:navigate back, как показано на экране внизу: <br>"
msgstr ""

#: ../../src/help-center/tutorial3.md:195
msgid "![Tutorial 3.5](tut3.5.png)"
msgstr ""

#: ../../src/help-center/tutorial3.md:195
msgid "Tutorial 3.5"
msgstr ""

#: ../../src/help-center/tutorial3.md:199
msgid "Другие доступные функции context.Commands:"
msgstr ""

#: ../../src/help-center/tutorial3.md:201
msgid "``context.Commands.AddItem(GUID)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:202
msgid ""
"Добавить элемент управления пользовательским интерфейсом на страницу с "
"помощью GUID."
msgstr ""

#: ../../src/help-center/tutorial3.md:203
msgid "``context.Commands.ChangePageAsync(GUID)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:204
msgid "Открыть страницу, используя ее GUID"
msgstr ""

#: ../../src/help-center/tutorial3.md:205
msgid "``context.Commands.ChangePageByName(«ИмяСтраницы»)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:206
msgid ""
"Измените текущую страницу компонента на новую страницу, используя "
"внутреннее имя"
msgstr ""

#: ../../src/help-center/tutorial3.md:207
msgid "``context.Commands.OpenComponent(GUID ComponentID, GUID PageID)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:208
msgid "Открыть новый компонент и определенную страницу внутри компонента"
msgstr ""

#: ../../src/help-center/tutorial3.md:209
msgid "``context.Commands.EditItem(GUID UI_ControlID, EntityId)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:210
msgid ""
"Смещение фокуса пользовательского интерфейса на конкретный элемент "
"управления пользовательского интерфейса и определенные данные (используя "
"его внутренний идентификатор)"
msgstr ""

#: ../../src/help-center/tutorial3.md:211
msgid "``context.Commands.ExecuteWorkflow(GUID WorkflowID)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:212
msgid "Выполнить рабочий процесс, используя его идентификатор"
msgstr ""

#: ../../src/help-center/tutorial3.md:213
msgid ""
"Кроме того, при необходимости можно настроить WaitComplete на true или "
"false."
msgstr ""

#: ../../src/help-center/tutorial3.md:214
msgid ""
"``context.Commands.ExecuteDataflow(идентификатор потока данных GUID, "
"ContextID)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:215
msgid "Выполнить поток данных, используя его GUID и указанный контекст данных."
msgstr ""

#: ../../src/help-center/tutorial3.md:216
msgid "``context.Commands.ExecuteScript(String ScriptName, StringParams Script)``"
msgstr ""

#: ../../src/help-center/tutorial3.md:217
msgid "Выполнить скрипт (функцию) из Component Script с некоторыми параметрами"
msgstr ""

#~ msgid "Tutorial 3"
#~ msgstr ""

